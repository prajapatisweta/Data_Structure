3rd pract
* tower (disk from tower A to B using C)
==>

#include<iostream>
using namespace std;
void tower(int n,char from,char aux,char to)
{
    if(n==1)
    {
        
        std::cout<<"move disk 1 from \t"<<from<<"to \t"<<to<<endl;
        return;
    }
    else
    {
        tower(n-1,from,to,aux);
        cout<<"move disk \t"<<n<<" \t from \t"<<from<<" \t to \t"<<to<<endl;
        tower(n-1,aux,from,to);
    }
}

int main()
{
    int n;
    cout<<"Enter no. of disk";
    cin>>n;
    tower(n,'A','C','B');

    return 0;
}
---------------------------------------------------------------------------

4th pract
* queue 
-> stack works in lifo manner
-> queue works in fifo manner

==>
#include<iostream>
using namespace std;
int front=-1;
int rear=-1;
int a[5];
int size=5;
void insert(int item)
{
if(rear>size-1)
cout<<"Queue overflow"<<endl;
else if(front==-1 && rear==-1)
{
front=front+1;
rear=rear+1;
a[rear]=item;
}
else
{
rear=rear+1;
a[rear]=item;



}
cout<<item<<" inserted"<<endl;
}
void delete1()
{
int item=NULL;
if(front==-1 && rear==-1)
{
cout<<"Queue underflow";
}
else if(front>rear)
{
front=-1;
rear=-1;
}
else if(front==rear)
{
item=a[front];
a[front]=NULL;
front=-1;
rear=-1;
}



else {
item=a[front];
a[front]=NULL;
front++;

}
}
void disp()
{
for(int i=0;i<size;i++)
{
cout<<a[i]<<endl;
}
}
int main()
{

insert(10);
insert(20);
insert(30);
disp();
delete1();
delete1();
disp();
insert(40);
disp();
delete1();
delete1();
disp();
delete1();

}